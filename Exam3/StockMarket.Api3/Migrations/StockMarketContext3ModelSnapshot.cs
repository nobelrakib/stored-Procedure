// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StockMarketApi.Store3;

namespace StockMarket.Api3.Migrations
{
    [DbContext(typeof(StockMarketContext3))]
    partial class StockMarketContext3ModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("StockMarketApi.Store3.Company3", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.Property<string>("Symbol");

                    b.HasKey("Id");

                    b.ToTable("Companies3");
                });

            modelBuilder.Entity("StockMarketApi.Store3.StockRecord3", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CompanyId");

                    b.Property<int>("MaxPrice");

                    b.Property<int>("MinPrice");

                    b.Property<DateTime>("TradingDay");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("StockRecords3");
                });

            modelBuilder.Entity("StockMarketApi.Store3.StockRecord3", b =>
                {
                    b.HasOne("StockMarketApi.Store3.Company3", "Company3")
                        .WithMany("StockRecords")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
